{
    "contents" : "---\ntitle: \"Chmura nazw stanowisk\"\nauthor: \"KW\"\ndate: \"03.03.2016\"\noutput:\n  html_document:\n    theme: spacelab\n    toc: yes\n  pdf_document:\n    toc: yes\n---\n\n\n```{r message = FALSE, echo = FALSE}\n# loading libs\nlibrary(\"readr\")\nlibrary(\"dplyr\")\nlibrary(\"data.table\")\nlibrary(\"utils\")\nlibrary(\"ggplot2\")\nlibrary(\"knitr\")\n```\n\n## Podsumowanie metody wybierajacej według wystepujących fraz oferty z puli ogłoszeń *`data.science`*\n\nNa podstawie ofert odseparowanych filtrem od wszystkich ogłoszeń zapisanych do pliku *`jobs.csv`* oraz stworzonych słownikow fraz, np. *`phrase_dic_eng.csv`* zliczane były oferty pasujace do poszczególnych fraz znajdujacych sie w slownikach. Graficzne podsumowanie przedstawia wykres: \n\n\n```{r echo = FALSE}\n# switching dir to get some data\nsetwd(\"../Filtr\")\n\n# reading needed datasets\nfiltered_data_w_dupli <- read_csv(\"filtered_data_w_dupli.csv\" , col_names = TRUE)\nneeded_complete_phrases <- read_csv(\"needed_complete_phrases.csv\" , col_names = TRUE)\n\n# converting data.table column to vector of strings\nneeded_complete_phrases <- as.vector(needed_complete_phrases$needed_complete_phrases)\n\n\nexeptions_phrases <- read_csv(\"exeptions_phrases.csv\" , col_names = TRUE)\n\n# going back home\nsetwd(\"../JobNamesCloud\")\n\n# creating data.frame to accumulate numbers of offers for a given phrase\nnum_of_nam <- c()\n\n\n\nfor (NCP in needed_complete_phrases)  {\n\n\n  work_var <- mutate(filtered_data_w_dupli, JobNameIndicator = grepl(paste0(\".*\",NCP,\".*\"), href) )%>% summarize(sum(JobNameIndicator))\n  num_of_nam <- append(num_of_nam, work_var)\n\n  #num_of_nam <- rbind(num_of_nam, as.data.frame(assign(paste0(\"\",NCP), work_var)))\n  #filtered_data <- rbind(filtered_data, filtered_data1)\n}\n\n\nnames(num_of_nam) <- needed_complete_phrases\nnum_of_nam <- sapply(num_of_nam, \n                function (x) {return(x)})\n\ndf_row_names <- as.character(1:length(needed_complete_phrases))\n\nnum_of_nam_df <- as.data.frame(num_of_nam, row.names = df_row_names, stringsAsFactors = FALSE)\nnum_of_nam_df <- data.frame(needed_complete_phrases, num_of_nam_df)\nnames(num_of_nam_df) <- c(\"phrase\",\"num_of_offers\")\nnum_of_nam_df <-  arrange(num_of_nam_df, desc(num_of_offers))\n\n\nggplot(num_of_nam_df, aes(x=factor(1), num_of_offers, fill=as.factor(paste(phrase, num_of_offers, sep = \" - \")))) + geom_bar(stat=\"identity\", width=1) + ggtitle(\"Czestosc wystepowania poszukiwanej frazy\")+coord_polar(theta = \"y\") + theme(legend.position=\"right\", legend.title=element_blank(), plot.title = element_text(lineheight=3, face=\"bold\", color=\"black\", size=12)) + xlab(\"\")+ylab(\"\")\n\nnum_of_nam_df$phrase <- reorder(num_of_nam_df$phrase, num_of_nam_df$num_of_offers, mean)\nggplot(num_of_nam_df, aes(x=phrase, y=num_of_offers, fill=as.factor(paste(phrase, num_of_offers, sep = \" - \")))) + geom_bar(stat=\"identity\", width=1) + ggtitle(\"Czestosc wystepowania poszukiwanej frazy\")+ theme(legend.position=\"right\", legend.title=element_blank(), plot.title = element_text(lineheight=3, face=\"bold\", color=\"black\", size=12)) + xlab(\"\")+ylab(\"\") + coord_flip() +scale_y_sqrt(breaks=c(0,1,5,10,50,100,200,500))\n```\n\n## Tabela pzedstawiająca uporządkowane wartości z wykresu\n\nW tabeli zebrane zostały uporzadkowane frazy wraz z przypisaną im przez program ilością ofert:\n\n```{r echo = FALSE}\nnum_of_nam_names <- c(\"Fraza\", \"Liczba ofert przyporzadkowanych frazie\")\n\nkable(num_of_nam_df, digits = 1, col.names = num_of_nam_names)\n\n```\n\n\n\n\n\n",
    "created" : 1456952236694.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2178346467",
    "id" : "BDD42433",
    "lastKnownWriteTime" : 1457050310,
    "path" : "D:/eR/MI2/pracuj/pracuj/JobNamesCloud/JobNamesCloud.Rmd",
    "project_path" : "JobNamesCloud.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_markdown"
}